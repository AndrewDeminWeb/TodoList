{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Desktop\\\\Demin React app\\\\app\\\\src\\\\components\\\\ListTodos.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport s from '../css/style.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListTodos = _ref => {\n  _s();\n  let {\n    todos,\n    setTodos,\n    changeCompleteTodo,\n    deleteTodo,\n    listRef,\n    editTodo,\n    changeEditableTodo\n  } = _ref;\n  const [filterTodos, setFilterTodos] = useState(todos);\n  const [textFilter, setTextFilter] = useState('all');\n  const [leftTodos, setLeftTodos] = useState([]);\n  const [checkedTodos, setCheckedTodos] = useState([]);\n  const lengthLeftTodos = textFilter !== \"completed\" ? leftTodos.length : filterTodos.length;\n  const lengthCheckedTodos = textFilter !== \"completed\" && checkedTodos.length;\n  useEffect(() => {\n    setTextFilter(textFilter);\n  }, [textFilter]);\n  useLayoutEffect(() => {\n    setFilterTodos(todos);\n    setCheckedTodos(todos.filter(todo => todo.isComplete === true));\n    setLeftTodos(todos.filter(todo => todo.isComplete === false));\n    handleFilterTodo(textFilter);\n  }, [todos, textFilter]);\n  const handleFilterTodo = filter => {\n    switch (filter) {\n      case \"completed\":\n        setFilterTodos(todos.filter(todo => todo.isComplete === true));\n        break;\n      case \"active\":\n        setFilterTodos(todos.filter(todo => todo.isComplete === false));\n        break;\n      default:\n        setFilterTodos(todos);\n    }\n  };\n  const selectAllTodos = () => {\n    setTodos(todos.map(todo => ({\n      ...todo,\n      isComplete: true\n    })));\n  };\n  const clearAllSelectedTodo = () => {\n    setTodos(todos.filter(todo => todo.isComplete !== true));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.selectAll,\n      onClick: selectAllTodos,\n      children: \"Select all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.clearAllSelected,\n      onClick: clearAllSelectedTodo,\n      children: [\"Clear completed todo (\", lengthCheckedTodos, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterTodos && filterTodos.map((todo, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: el => listRef.current[i] = el,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.isComplete,\n          onChange: () => changeCompleteTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.todo_text,\n          children: todo.textTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), !todo.isEditable ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.edit,\n          onClick: () => {\n            editTodo(i);\n            changeEditableTodo(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.save,\n          onClick: () => {\n            editTodo(i);\n            changeEditableTodo(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.delete,\n          onClick: () => deleteTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: s.change_filter,\n      children: [lengthLeftTodos, \" items left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.change_filter,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filtered\",\n        id: \"active\",\n        onChange: () => handleFilterTodo(setTextFilter(\"active\"))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"active\",\n        children: \"ACTIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filtered\",\n        id: \"completed\",\n        onChange: () => handleFilterTodo(setTextFilter(\"completed\"))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"completed\",\n        children: \"COMPLETED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filtered\",\n        id: \"all\",\n        onChange: () => handleFilterTodo(setTextFilter(\"all\")),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"all\",\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ListTodos, \"7t7jfayYzqNp/WTXKJYCzhsLWnQ=\");\n_c = ListTodos;\nexport { ListTodos };\nvar _c;\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"names":["useEffect","useLayoutEffect","useState","s","jsxDEV","_jsxDEV","Fragment","_Fragment","ListTodos","_ref","_s","todos","setTodos","changeCompleteTodo","deleteTodo","listRef","editTodo","changeEditableTodo","filterTodos","setFilterTodos","textFilter","setTextFilter","leftTodos","setLeftTodos","checkedTodos","setCheckedTodos","lengthLeftTodos","length","lengthCheckedTodos","filter","todo","isComplete","handleFilterTodo","selectAllTodos","map","clearAllSelectedTodo","children","className","selectAll","onClick","fileName","_jsxFileName","lineNumber","columnNumber","clearAllSelected","i","ref","el","current","type","checked","onChange","id","todo_text","textTodo","isEditable","edit","save","delete","change_filter","name","htmlFor","defaultChecked","_c","$RefreshReg$"],"sources":["C:/Users/Андрей/Desktop/Demin React app/app/src/components/ListTodos.jsx"],"sourcesContent":["import { useEffect, useLayoutEffect, useState } from \"react\"\r\nimport s from '../css/style.module.css'\r\n\r\nconst ListTodos = ({ todos, setTodos, changeCompleteTodo, deleteTodo, listRef, editTodo, changeEditableTodo }) => {\r\n    const [filterTodos, setFilterTodos] = useState(todos)\r\n    const [textFilter, setTextFilter] = useState('all')\r\n    const [leftTodos, setLeftTodos] = useState([])\r\n    const [checkedTodos, setCheckedTodos] = useState([])\r\n\r\n    const lengthLeftTodos = textFilter !== \"completed\" ? leftTodos.length : filterTodos.length\r\n    const lengthCheckedTodos = textFilter !== \"completed\" && checkedTodos.length\r\n    \r\n    useEffect(() => {\r\n        setTextFilter(textFilter)\r\n    }, [textFilter])\r\n\r\n    useLayoutEffect(() => {\r\n        setFilterTodos(todos)\r\n        setCheckedTodos(todos.filter(todo => todo.isComplete === true))\r\n        setLeftTodos(todos.filter(todo => todo.isComplete === false))\r\n        handleFilterTodo(textFilter)\r\n    }, [todos, textFilter])\r\n\r\n    const handleFilterTodo = (filter) => {\r\n        switch(filter) {\r\n            case \"completed\":\r\n                setFilterTodos(todos.filter(todo => todo.isComplete === true))\r\n                break\r\n            case \"active\":\r\n                setFilterTodos(todos.filter(todo => todo.isComplete === false))\r\n                break\r\n            default: \r\n                setFilterTodos(todos)\r\n        }\r\n    }\r\n\r\n    const selectAllTodos = () => {\r\n        setTodos(todos.map(todo => ({ ...todo, isComplete: true })))\r\n    }\r\n\r\n    const clearAllSelectedTodo = () => {\r\n        setTodos(todos.filter(todo => todo.isComplete !== true))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className={s.selectAll} onClick={selectAllTodos}>Select all</button>\r\n            <button className={s.clearAllSelected} onClick={clearAllSelectedTodo}>Clear completed todo ({lengthCheckedTodos})</button>\r\n            <ul>\r\n                {filterTodos && filterTodos.map((todo, i) => (\r\n                    <li key={todo.id} ref={el => listRef.current[i] = el}>\r\n                        <input type=\"checkbox\" checked={todo.isComplete} onChange={() => changeCompleteTodo(todo.id)}/>\r\n                        <span className={s.todo_text}>{todo.textTodo}</span>\r\n                        {!todo.isEditable ?\r\n                            <span className={s.edit} onClick={() => {\r\n                                editTodo(i)\r\n                                changeEditableTodo(todo.id)\r\n                            }}></span>\r\n                            :\r\n                            <span className={s.save} onClick={() => {\r\n                                editTodo(i)\r\n                                changeEditableTodo(todo.id)\r\n                            }}></span>\r\n                        }\r\n                        <span className={s.delete} onClick={() => deleteTodo(todo.id)}></span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <p className={s.change_filter}>{lengthLeftTodos} items left</p>\r\n            \r\n            <div className={s.change_filter}>\r\n                <input type=\"radio\" name=\"filtered\" id=\"active\" onChange={() => handleFilterTodo(setTextFilter(\"active\"))} />\r\n                <label htmlFor=\"active\">ACTIVE</label>\r\n\r\n                <input type=\"radio\" name=\"filtered\" id=\"completed\" onChange={() => handleFilterTodo(setTextFilter(\"completed\"))} />\r\n                <label htmlFor=\"completed\">COMPLETED</label>\r\n\r\n                <input type=\"radio\" name=\"filtered\" id=\"all\" onChange={() => handleFilterTodo(setTextFilter(\"all\"))} defaultChecked />\r\n                <label htmlFor=\"all\">ALL</label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { ListTodos }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}