{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Desktop\\\\Demin React app\\\\app\\\\src\\\\components\\\\ListTodos.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport s from '../css/style.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListTodos = _ref => {\n  _s();\n  var _leftTodos$length, _checkedTodos$length;\n  let {\n    todos,\n    setTodos,\n    changeCompleteTodo,\n    deleteTodo,\n    listRef,\n    editTodo,\n    changeEditableTodo\n  } = _ref;\n  const [filterTodos, setFilterTodos] = useState(todos);\n  const [textFilter, setTextFilter] = useState('all');\n  const [leftTodos, setLeftTodos] = useState([]);\n  const [checkedTodos, setCheckedTodos] = useState([]);\n  const lengthLeftTodos = (_leftTodos$length = leftTodos.length) !== null && _leftTodos$length !== void 0 ? _leftTodos$length : filterTodos.length;\n  const lengthCheckedTodos = (_checkedTodos$length = checkedTodos.length) !== null && _checkedTodos$length !== void 0 ? _checkedTodos$length : 0;\n  useEffect(() => {\n    setTextFilter(textFilter);\n  }, [textFilter]);\n  useLayoutEffect(() => {\n    setFilterTodos(todos);\n    setCheckedTodos(todos.filter(todo => todo.isComplete === true));\n    setLeftTodos(todos.filter(todo => todo.isComplete === false));\n    handleFilterTodo(textFilter);\n  }, [todos, textFilter]);\n  const handleFilterTodo = filter => {\n    switch (filter) {\n      case \"completed\":\n        setFilterTodos(todos.filter(todo => todo.isComplete === true));\n        break;\n      case \"active\":\n        setFilterTodos(todos.filter(todo => todo.isComplete === false));\n        break;\n      default:\n        setFilterTodos(todos);\n    }\n  };\n  const selectAllTodos = () => {\n    setTodos(todos.map(todo => ({\n      ...todo,\n      isComplete: true\n    })));\n  };\n  const clearAllSelectedTodo = () => {\n    setTodos(todos.filter(todo => todo.isComplete !== true));\n  };\n  const handleChangeText = (id, e) => {\n    let {\n      target: {\n        textContent\n      }\n    } = e;\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo;\n      return {\n        ...todo,\n        textTodo: textContent\n      };\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.selectAll,\n      onClick: selectAllTodos,\n      children: \"Select all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), lengthCheckedTodos !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.clearAllSelected,\n      onClick: clearAllSelectedTodo,\n      children: [\"Clear completed todo (\", lengthCheckedTodos, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterTodos && filterTodos.map((todo, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: el => listRef.current[i] = el,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.isComplete,\n          onChange: () => changeCompleteTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.todo_text,\n          onInput: e => handleChangeText(todo.id, e),\n          children: todo.textTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), !todo.isEditable ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.edit,\n          onClick: () => {\n            editTodo(i);\n            changeEditableTodo(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.save,\n          onClick: () => {\n            editTodo(i);\n            changeEditableTodo(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.delete,\n          onClick: () => deleteTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: s.change_filter,\n      children: [lengthLeftTodos, \" items left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.change_filter,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filtered\",\n        id: \"active\",\n        onChange: () => handleFilterTodo(setTextFilter(\"active\"))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"active\",\n        children: \"ACTIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filtered\",\n        id: \"completed\",\n        onChange: () => handleFilterTodo(setTextFilter(\"completed\"))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"completed\",\n        children: \"COMPLETED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"filtered\",\n        id: \"all\",\n        onChange: () => handleFilterTodo(setTextFilter(\"all\")),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"all\",\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ListTodos, \"7t7jfayYzqNp/WTXKJYCzhsLWnQ=\");\n_c = ListTodos;\nexport { ListTodos };\nvar _c;\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"names":["useEffect","useLayoutEffect","useState","s","jsxDEV","_jsxDEV","Fragment","_Fragment","ListTodos","_ref","_s","_leftTodos$length","_checkedTodos$length","todos","setTodos","changeCompleteTodo","deleteTodo","listRef","editTodo","changeEditableTodo","filterTodos","setFilterTodos","textFilter","setTextFilter","leftTodos","setLeftTodos","checkedTodos","setCheckedTodos","lengthLeftTodos","length","lengthCheckedTodos","filter","todo","isComplete","handleFilterTodo","selectAllTodos","map","clearAllSelectedTodo","handleChangeText","id","e","target","textContent","textTodo","children","className","selectAll","onClick","fileName","_jsxFileName","lineNumber","columnNumber","clearAllSelected","i","ref","el","current","type","checked","onChange","todo_text","onInput","isEditable","edit","save","delete","change_filter","name","htmlFor","defaultChecked","_c","$RefreshReg$"],"sources":["C:/Users/Андрей/Desktop/Demin React app/app/src/components/ListTodos.jsx"],"sourcesContent":["import { useEffect, useLayoutEffect, useState } from \"react\"\r\nimport s from '../css/style.module.css'\r\n\r\nconst ListTodos = ({ todos, setTodos, changeCompleteTodo, deleteTodo, listRef, editTodo, changeEditableTodo }) => {\r\n    const [filterTodos, setFilterTodos] = useState(todos)\r\n    const [textFilter, setTextFilter] = useState('all')\r\n    const [leftTodos, setLeftTodos] = useState([])\r\n    const [checkedTodos, setCheckedTodos] = useState([])\r\n\r\n    const lengthLeftTodos = leftTodos.length ?? filterTodos.length\r\n    const lengthCheckedTodos = checkedTodos.length ?? 0\r\n    \r\n    useEffect(() => {\r\n        setTextFilter(textFilter)\r\n    }, [textFilter])\r\n\r\n    useLayoutEffect(() => {\r\n        setFilterTodos(todos)\r\n        setCheckedTodos(todos.filter(todo => todo.isComplete === true))\r\n        setLeftTodos(todos.filter(todo => todo.isComplete === false))\r\n        handleFilterTodo(textFilter)\r\n    }, [todos, textFilter])\r\n\r\n    const handleFilterTodo = (filter) => {\r\n        switch(filter) {\r\n            case \"completed\":\r\n                setFilterTodos(todos.filter(todo => todo.isComplete === true))\r\n                break\r\n            case \"active\":\r\n                setFilterTodos(todos.filter(todo => todo.isComplete === false))\r\n                break\r\n            default: \r\n                setFilterTodos(todos)\r\n        }\r\n    }\r\n\r\n    const selectAllTodos = () => {\r\n        setTodos(todos.map(todo => ({ ...todo, isComplete: true })))\r\n    }\r\n\r\n    const clearAllSelectedTodo = () => {\r\n        setTodos(todos.filter(todo => todo.isComplete !== true))\r\n    }\r\n\r\n    const handleChangeText = (id, e) => {\r\n        let { target: { textContent } } = e\r\n        setTodos(todos.map(todo => {\r\n            if(todo.id !== id) return todo\r\n\r\n            return {\r\n                ...todo,\r\n                textTodo: textContent\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className={s.selectAll} onClick={selectAllTodos}>Select all</button>\r\n            {lengthCheckedTodos !== 0 &&\r\n                <button className={s.clearAllSelected} onClick={clearAllSelectedTodo}>Clear completed todo ({lengthCheckedTodos})</button>\r\n            }\r\n            <ul>\r\n                {filterTodos && filterTodos.map((todo, i) => (\r\n                    <li key={todo.id} ref={el => listRef.current[i] = el}>\r\n                        <input type=\"checkbox\" checked={todo.isComplete} onChange={() => changeCompleteTodo(todo.id)}/>\r\n                        <span className={s.todo_text} onInput={(e) => handleChangeText(todo.id, e)}>{todo.textTodo}</span>\r\n                        {!todo.isEditable ?\r\n                            <span className={s.edit} onClick={() => {\r\n                                editTodo(i)\r\n                                changeEditableTodo(todo.id)\r\n                            }}></span>\r\n                            :\r\n                            <span className={s.save} onClick={() => {\r\n                                editTodo(i)\r\n                                changeEditableTodo(todo.id)\r\n                            }}></span>\r\n                        }\r\n                        <span className={s.delete} onClick={() => deleteTodo(todo.id)}></span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <p className={s.change_filter}>{lengthLeftTodos} items left</p>\r\n            \r\n            <div className={s.change_filter}>\r\n                <input type=\"radio\" name=\"filtered\" id=\"active\" onChange={() => handleFilterTodo(setTextFilter(\"active\"))} />\r\n                <label htmlFor=\"active\">ACTIVE</label>\r\n\r\n                <input type=\"radio\" name=\"filtered\" id=\"completed\" onChange={() => handleFilterTodo(setTextFilter(\"completed\"))} />\r\n                <label htmlFor=\"completed\">COMPLETED</label>\r\n\r\n                <input type=\"radio\" name=\"filtered\" id=\"all\" onChange={() => handleFilterTodo(setTextFilter(\"all\"))} defaultChecked />\r\n                <label htmlFor=\"all\">ALL</label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { ListTodos }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}