{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Desktop\\\\Demin React app\\\\app\\\\src\\\\components\\\\FormTodos.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { ListTodos } from \"./ListTodos\";\nimport s from '../css/style.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormTodos() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [textTodo, setTextTodo] = useState('');\n  const listRef = useRef([]);\n  const handleSubTodo = () => {\n    if (textTodo.trim().length) {\n      setTodos([...todos, {\n        id: new Date().toISOString(),\n        textTodo,\n        isComplete: false,\n        isEditable: false\n      }]);\n    }\n    setTextTodo('');\n  };\n  const changeCompleteTodo = id => {\n    setTodos(todos.map(todo => todo.id !== id ? todo : {\n      ...todo,\n      isComplete: !todo.isComplete\n    }));\n  };\n  const changeEditableTodo = id => {\n    setTodos(todos.map(todo => todo.id !== id ? todo : {\n      ...todo,\n      isEditable: !todo.isEditable\n    }));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const editTodo = n => {\n    let todoText = listRef.current[n].querySelector('[class*=\"todo_text\"]');\n    if (!todoText.hasAttribute('contentEditable')) {\n      todoText.contentEditable = true;\n    } else todoText.removeAttribute('contentEditable');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: s.type_todo,\n      type: \"text\",\n      placeholder: \"Type some todo...\",\n      value: textTodo,\n      onChange: e => setTextTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.btn_enter_todo,\n      onClick: handleSubTodo,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), todos.length > 0 && /*#__PURE__*/_jsxDEV(ListTodos, {\n      todos: todos,\n      changeCompleteTodo: changeCompleteTodo,\n      deleteTodo: deleteTodo,\n      listRef: listRef,\n      editTodo: editTodo,\n      setTodos: setTodos,\n      changeEditableTodo: changeEditableTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(FormTodos, \"FAf1zdArBWRnPg29CJK/yHXlz18=\");\n_c = FormTodos;\nexport { FormTodos };\nvar _c;\n$RefreshReg$(_c, \"FormTodos\");","map":{"version":3,"names":["useRef","useState","ListTodos","s","jsxDEV","_jsxDEV","Fragment","_Fragment","FormTodos","_s","todos","setTodos","textTodo","setTextTodo","listRef","handleSubTodo","trim","length","id","Date","toISOString","isComplete","isEditable","changeCompleteTodo","map","todo","changeEditableTodo","deleteTodo","filter","editTodo","n","todoText","current","querySelector","hasAttribute","contentEditable","removeAttribute","children","className","type_todo","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","btn_enter_todo","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Андрей/Desktop/Demin React app/app/src/components/FormTodos.jsx"],"sourcesContent":["import { useRef, useState } from \"react\"\r\nimport { ListTodos } from \"./ListTodos\"\r\nimport s from '../css/style.module.css'\r\n\r\nfunction FormTodos() {\r\n    const [todos, setTodos] = useState([])\r\n    const [textTodo, setTextTodo] = useState('')\r\n    const listRef = useRef([])\r\n\r\n    const handleSubTodo = () => {\r\n        if(textTodo.trim().length) {\r\n            setTodos([\r\n                ...todos,\r\n                {\r\n                    id: new Date().toISOString(),\r\n                    textTodo,\r\n                    isComplete: false,\r\n                    isEditable: false\r\n                }\r\n            ])\r\n        }\r\n        setTextTodo('')\r\n    }\r\n\r\n    const changeCompleteTodo = (id) => {\r\n        setTodos(todos.map(todo =>\r\n            todo.id !== id ? todo : { ...todo, isComplete: !todo.isComplete }))\r\n    }\r\n\r\n    const changeEditableTodo = (id) => {\r\n        setTodos(todos.map(todo =>\r\n            todo.id !== id ? todo : { ...todo, isEditable: !todo.isEditable }))\r\n    }\r\n\r\n    const deleteTodo = (id) => {\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    const editTodo = (n) => {\r\n        let todoText = listRef.current[n].querySelector('[class*=\"todo_text\"]')\r\n        if(!todoText.hasAttribute('contentEditable')) {\r\n            todoText.contentEditable = true\r\n            \r\n        }\r\n        else\r\n            todoText.removeAttribute('contentEditable')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input className={s.type_todo} type=\"text\" placeholder=\"Type some todo...\" value={textTodo} onChange={(e) => setTextTodo(e.target.value)}/>\r\n            <button className={s.btn_enter_todo} onClick={handleSubTodo}>Enter</button>\r\n            {todos.length > 0 && \r\n                <ListTodos todos={todos} changeCompleteTodo={changeCompleteTodo}\r\n                deleteTodo={deleteTodo} listRef={listRef} editTodo={editTodo}\r\n                setTodos={setTodos} changeEditableTodo={changeEditableTodo}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport { FormTodos }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}