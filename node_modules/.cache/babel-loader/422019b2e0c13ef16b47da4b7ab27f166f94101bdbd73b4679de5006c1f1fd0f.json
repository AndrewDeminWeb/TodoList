{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport { ListTodos } from \"./ListTodos\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormTodos() {\n  // const [todos, setTodos] = useState([])\n  // const [textTodo, setTextTodo] = useState('')\n\n  // const handleSubTodo = () => {\n  //     if(textTodo.trim().length) {\n  //         setTodos([\n  //             ...todos,\n  //             {\n  //                 id: new Date().toISOString(),\n  //                 textTodo,\n  //                 isComplete: false\n  //             }\n  //         ])\n  //         setTextTodo('')\n  //     }\n  // }\n\n  // const changeCompleteTodo = (id) => {\n  //     setTodos(todos.map(todo =>\n  //         todo.id !== id ? todo : { ...todo, isComplete: !todo.isComplete }))\n  // }\n\n  // const deleteTodo = (id) => {\n  //     setTodos(todos.filter(todo => todo.id !== id))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = FormTodos;\nexport { FormTodos };\nvar _c;\n$RefreshReg$(_c, \"FormTodos\");","map":{"version":3,"names":["useEffect","useState","ListTodos","Fragment","_Fragment","jsxDEV","_jsxDEV","FormTodos","_c","$RefreshReg$"],"sources":["C:/Users/Manager/Desktop/Demin React app/app/src/components/FormTodos.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { ListTodos } from \"./ListTodos\"\r\n\r\nfunction FormTodos() {\r\n    // const [todos, setTodos] = useState([])\r\n    // const [textTodo, setTextTodo] = useState('')\r\n\r\n    // const handleSubTodo = () => {\r\n    //     if(textTodo.trim().length) {\r\n    //         setTodos([\r\n    //             ...todos,\r\n    //             {\r\n    //                 id: new Date().toISOString(),\r\n    //                 textTodo,\r\n    //                 isComplete: false\r\n    //             }\r\n    //         ])\r\n    //         setTextTodo('')\r\n    //     }\r\n    // }\r\n\r\n    // const changeCompleteTodo = (id) => {\r\n    //     setTodos(todos.map(todo =>\r\n    //         todo.id !== id ? todo : { ...todo, isComplete: !todo.isComplete }))\r\n    // }\r\n\r\n    // const deleteTodo = (id) => {\r\n    //     setTodos(todos.filter(todo => todo.id !== id))\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            {/* <input type=\"text\" placeholder=\"Type some todo...\" value={textTodo} onChange={(e) => setTextTodo(e.target.value)}/>\r\n            <button onClick={handleSubTodo}>Enter</button>\r\n            <ListTodos todos={todos} changeCompleteTodo={changeCompleteTodo} deleteTodo={deleteTodo}/> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport { FormTodos }"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,aAAa;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EACjB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACID,OAAA,CAAAF,SAAA,oBAIG;AAEX;AAACI,EAAA,GAlCQD,SAAS;AAoClB,SAASA,SAAS;AAAE,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}